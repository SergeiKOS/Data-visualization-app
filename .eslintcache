[{"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\App.js":"1","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\datePicker\\DatePicker.js":"2","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\index.tsx":"3","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\getLocalStorageData.ts":"4","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\customNotification.ts":"5","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\resetBtn\\ResetBtn.tsx":"6","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\chart\\Chart.js":"7","D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\form\\Form.tsx":"8"},{"size":4263,"mtime":1611940267779,"results":"9","hashOfConfig":"10"},{"size":668,"mtime":1611938290924,"results":"11","hashOfConfig":"10"},{"size":190,"mtime":1611938315562,"results":"12","hashOfConfig":"10"},{"size":618,"mtime":1611939139407,"results":"13","hashOfConfig":"10"},{"size":241,"mtime":1611938543238,"results":"14","hashOfConfig":"10"},{"size":339,"mtime":1611942216696,"results":"15","hashOfConfig":"10"},{"size":547,"mtime":1611939033223,"results":"16","hashOfConfig":"10"},{"size":842,"mtime":1611942212284,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1nqfwb0",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\App.js",["37"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { customAlert, NotificationComponent } from \"./customNotification\";\n\nimport { GithubPicker } from \"react-color\";\nimport Form from \"./components/form/Form\";\nimport Chart from \"./components/chart/Chart\";\nimport {\n  returnData,\n  returnDate,\n  returnColor,\n} from \"./components/getLocalStorageData\";\nimport ResetBtn from \"./components/resetBtn/ResetBtn\";\n\nfunction App() {\n  const [userDataInput, setUserDataInput] = useState();\n  const [userTimeInput, setUserTimeInput] = useState(new Date());\n  const [userTimeInputNow, setUserTimeInputNow] = useState();\n  const [dataData, setDataData] = useState(returnData());\n  const [dataTime, setDataTime] = useState(returnDate());\n  const [dailyData, setDailyData] = useState({\n    datasets: [\n      {\n        label: \"\",\n        backgroundColor: returnColor(),\n        data: [],\n      },\n    ],\n  });\n\n  console.dir(userTimeInput);\n\n  useEffect(() => {\n    const dailyDataCopy = { ...dailyData };\n    const date = returnDate();\n    const data = returnData();\n    dailyDataCopy.labels = date;\n    dailyDataCopy.datasets[0].data = data;\n    setDailyData(dailyDataCopy);\n  }, [dataData]);\n\n  const handleDataChange = (e) => {\n    setUserDataInput(+e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!userTimeInputNow) {\n      customAlert(\"Pick a date.\");\n      return;\n    }\n\n    if (dataTime[dataTime.length - 1] === userTimeInputNow) {\n      customAlert(\"The same date can't be entered.\");\n      return;\n    }\n\n    const dateLater = (date) => {\n      if (date) {\n        date = date.split(\"/\");\n        date[0] = date[0] * 400;\n        date[1] = date[1] * 32;\n        date = date[0] + date[1] + date[2];\n        return date;\n      }\n    };\n\n    if (\n      dateLater(dataTime[dataTime.length - 1]) > dateLater(userTimeInputNow)\n    ) {\n      customAlert(\"Previous date can't be entered.\");\n      return;\n    }\n\n    let dataDataCopy = [...dataData];\n    dataDataCopy.push(userDataInput);\n    const dataDataString = dataDataCopy.join(\", \");\n    localStorage.setItem(\"number\", dataDataString);\n    setDataData(dataDataCopy);\n    let dataTimeCopy = [...dataTime];\n\n    dataTimeCopy.push(userTimeInputNow);\n    setDataTime([...dataTimeCopy]);\n\n    const dataTimeString = dataTimeCopy.join(\", \");\n    localStorage.setItem(\"date\", dataTimeString);\n  };\n\n  function formatDate(date) {\n    let month = \"\" + (date.getMonth() + 1);\n    let day = \"\" + date.getDate();\n    let year = date.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"/\");\n  }\n\n  const handleDateChange = (date) => {\n    setUserTimeInput(date);\n\n    date = formatDate(date);\n    setUserTimeInputNow(date);\n  };\n\n  const handleColorChange = (color) => {\n    setDailyData({\n      datasets: [\n        {\n          label: \"\",\n          backgroundColor: color.hex,\n          data: dailyData.datasets[0].data,\n        },\n      ],\n    });\n    localStorage.setItem(\"color\", color.hex);\n  };\n\n  const handleReset = () => {\n    if (window.confirm(\"Are you sure you want to delete all your data?\")) {\n      setDataData([]);\n      setDataTime([]);\n      localStorage.removeItem(\"date\");\n      localStorage.removeItem(\"number\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={styles.rules}>\n        Graphics to track changes in data (weight, calories, height, etc). Chart\n        will be saved in your browser.\n      </div>\n      <div className={styles.formColorPickerWrapper}>\n        <Form\n          onDataChange={handleDataChange}\n          onSubmit={handleSubmit}\n          userTimeInput={userTimeInput}\n          onDateChange={handleDateChange}\n          color={dailyData.datasets[0].backgroundColor}\n        />\n        <div>\n          <ResetBtn onReset={handleReset} />\n          <div className={styles.pickColor}>You can pick a color:</div>\n          <GithubPicker\n            color={dailyData.datasets[0].backgroundColor}\n            onChangeComplete={handleColorChange}\n          />\n        </div>\n      </div>\n\n      <Chart dailyData={dailyData} />\n\n      <NotificationComponent />\n    </div>\n  );\n}\n\nexport default App;\n",["38","39"],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\datePicker\\DatePicker.js",[],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\index.tsx",[],["40","41"],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\getLocalStorageData.ts",[],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\customNotification.ts",[],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\resetBtn\\ResetBtn.tsx",[],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\chart\\Chart.js",[],"D:\\Web development\\React\\My Projects\\data-visualization-app\\src\\components\\form\\Form.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":41,"column":6,"nodeType":"44","endLine":41,"endColumn":16,"suggestions":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyData'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-native-reassign",["51"],"no-negated-in-lhs",["52"],{"desc":"53","fix":"54"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dailyData, dataData]",{"range":"55","text":"56"},[1211,1221],"[dailyData, dataData]"]